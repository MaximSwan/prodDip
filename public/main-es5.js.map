{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/shared/components/nav-bar/nav-bar.component.ts","webpack:///src/app/shared/components/nav-bar/nav-bar.component.html","webpack:///src/app/shared/services/auth.interceptor.ts","webpack:///src/app/shared/services/storage.service.ts","webpack:///src/app/shared/services/user-api.service.ts","webpack:///src/app/shared/services/user.service.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","loadChildren","AuthModule","MainModule","redirectTo","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","NavBarComponent","_userService","navbarOpen","authToggle","userInfoData","email","username","avatar","subscription","isAuthorized","subscribe","res","user$","info","unsubscribe","logout","toggleNavbar","AuthInterceptor","storageService","userService","request","next","clone","setHeaders","authorization","getItem","handle","pipe","err","status","StorageService","prefix","localStorage","length","index","key","clear","value","fullKey","makeKey","strValue","stringify","setItem","parse","Array","isArray","forEach","removeItem","stringValue","JSON","outputValue","error","Boolean","UserApiService","http","BASE_URL","apiurl","get","UserService","router","LOGIN_PATH","hasAuthData","console","log","getValue","token","user","userId","resCache","undefined","navigate","SharedModule","provide","useClass","multi","environment","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\n\nconst routes: Routes = [\n  {\n    path: \"auth\",\n    loadChildren: () =>\n      import(`./modules/auth/auth.module`).then((module) => module.AuthModule),\n  },\n  {\n    path: \"main\",\n    loadChildren: () =>\n      import(`./modules/main/main.module`).then((module) => module.MainModule),\n  },\n  { path: '**', redirectTo: '/auth/login' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'diplom-blog';\n}\n","<div\n  style=\"height: 100%; display: grid; grid-template-rows: 56px 0 1fr\"\n  class=\"main\"\n>\n  <app-nav-bar></app-nav-bar>\n  <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\n\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { SharedModule } from \"./shared/shared.module\";\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, AppRoutingModule, SharedModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { Subscription } from \"rxjs\";\nimport { UserService } from \"../../services/user.service\";\n\n@Component({\n  selector: \"app-nav-bar\",\n  templateUrl: \"./nav-bar.component.html\",\n  styleUrls: [\"./nav-bar.component.scss\"],\n})\nexport class NavBarComponent implements OnInit, OnDestroy {\n  navbarOpen = false;\n  authToggle = false;\n  subscription: Subscription;\n  userInfoData = {\n    email: \"\",\n    username: \"\",\n    avatar: \"\",\n  };\n  constructor(private _userService: UserService) {}\n\n  ngOnInit() {\n    this.subscription = this._userService.isAuthorized.subscribe(\n      (res: boolean) => {\n        if (res) {\n          this._userService.user$.subscribe((info) => {\n\n            this.userInfoData.email = info.email;\n            this.userInfoData.username = info.username;\n            this.userInfoData.avatar = info.avatar;\n            this.authToggle = true;\n          });\n        } else {\n          this.authToggle = false;\n        }\n      }\n    );\n  }\n  toggleNavbar() {\n    this.navbarOpen = !this.navbarOpen;\n  }\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  onLogout() {\n    this._userService.logout();\n  }\n}\n","<nav\n  class=\"navbar navbar-expand-lg navbar-dark bg-dark\"\n  style=\"\n    position: relative;\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n    justify-content: flex-start;\n    padding: 0.5rem 1rem;\n  \"\n>\n  <a class=\"navbar-brand\" href=\"#\"> My blog </a>\n\n  <button class=\"navbar-toggler\" type=\"button\" (click)=\"toggleNavbar()\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div class=\"collapse navbar-collapse\" [ngClass]=\"{ show: navbarOpen }\">\n    <ul *ngIf=\"!authToggle\" class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/auth/registration\">Регистрация</a>\n      </li>\n\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/auth/login\">Вход</a>\n      </li>\n    </ul>\n    <ul *ngIf=\"authToggle\" class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link\">{{ userInfoData?.email }}</a>\n      </li>\n\n      <li class=\"nav-item\">\n        <a (click)=\"onLogout()\" style=\"cursor: pointer\" class=\"nav-link\"\n          >Выйти</a\n        >\n      </li>\n    </ul>\n  </div>\n</nav>\n","import {\r\n  HttpErrorResponse,\r\n  HttpEvent,\r\n  HttpHandler,\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n} from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { EMPTY, Observable } from \"rxjs\";\r\nimport { StorageService } from \"./storage.service\";\r\nimport { UserService } from \"./user.service\";\r\n\r\nimport { catchError } from \"rxjs/operators\";\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  constructor(\r\n    private storageService: StorageService,\r\n    private userService: UserService\r\n  ) {}\r\n  intercept(\r\n    request: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    request = request.clone({\r\n      setHeaders: {\r\n        authorization: `${this.storageService.getItem(\"token\")}`,\r\n      },\r\n    });\r\n    return next.handle(request).pipe(\r\n      catchError((err: HttpErrorResponse) => {\r\n        const status = err && err.status;\r\n        if (status === 401 || status === 403 || status === 400) {\r\n          this.userService.logout();\r\n        }\r\n\r\n        return EMPTY;\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\n\n@Injectable()\nexport class StorageService {\n  constructor() {}\n\n  private readonly prefix = \"mb\";\n\n  get length(): number {\n    return localStorage.length;\n  }\n\n  key(index: number): string | null {\n    return localStorage.key(index);\n  }\n\n  clear(): void {\n    localStorage.clear();\n  }\n\n  setItem(key: string, value: any): void {\n    const fullKey = this.makeKey(key);\n    const strValue = this.stringify(value);\n\n    localStorage.setItem(fullKey, strValue);\n  }\n\n  getItem(key: string): any {\n    const fullKey = this.makeKey(key);\n    const value = localStorage.getItem(fullKey);\n\n    return value ? this.parse(value) : null;\n  }\n\n  removeItem(keys: string | Array<string>): void {\n    if (Array.isArray(keys)) {\n      keys.forEach((key) => localStorage.removeItem(this.makeKey(key)));\n    } else {\n      localStorage.removeItem(this.makeKey(keys));\n    }\n  }\n\n  private stringify(value: any): string {\n    let stringValue: string;\n\n    if (!value) {\n      stringValue = \"\";\n    } else if (typeof value === \"string\") {\n      stringValue = value;\n    } else {\n      stringValue = JSON.stringify(value);\n    }\n\n    return stringValue;\n  }\n\n  private parse(value: string): any {\n    let outputValue: any;\n\n    try {\n      outputValue = JSON.parse(value);\n    } catch (error) {\n      outputValue = value;\n    }\n\n    return outputValue || null;\n  }\n\n  private makeKey(key: string): string {\n    return Boolean(this.prefix) ? `${this.prefix}:${key}` : key;\n  }\n}\n","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { environment } from \"src/environments/environment\";\n\n@Injectable()\nexport class UserApiService {\n  private readonly BASE_URL = environment.apiurl;\n  constructor(private http: HttpClient) {}\n\n  getUserInfo(id) {\n    return this.http.get<any>(`${this.BASE_URL}/api/user/info/${id}`);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject } from \"rxjs\";\nimport { StorageService } from \"./storage.service\";\nimport { Router } from \"@angular/router\";\n\n@Injectable()\nexport class UserService {\n  constructor(private storageService: StorageService, private router: Router) {\n    if (this.hasAuthData()) {\n      this.isAuthorized.next(true);\n    }\n    const email = this.storageService.getItem(\"email\");\n    const username = this.storageService.getItem(\"username\");\n    const avatar = this.storageService.getItem(\"avatar\");\n    if (email) {\n      this.user$.next({ username, email, avatar });\n      console.log(this.user$.getValue());\n    }\n  }\n\n  readonly user$ = new BehaviorSubject<any>(null);\n\n  readonly LOGIN_PATH = \"/auth/login\";\n\n  isAuthorized = new BehaviorSubject<boolean>(false);\n\n  hasAuthData() {\n    const token = this.storageService.getItem(\"token\");\n    return Boolean(token);\n  }\n\n  login(user) {\n    if (user) {\n      this.storageService.setItem(\"token\", user.token);\n      // this.storageService.setItem(\"username\", user.username);\n      this.storageService.setItem(\"email\", user.email);\n      // this.storageService.setItem(\"avatar\", user.avatar);\n      this.storageService.setItem(\"id\", user.userId);\n      const resCache = {\n        username: user.username,\n        email: user.email,\n        // avatar: user.avatar,\n      };\n      this.user$.next(resCache);\n      this.isAuthorized.next(true);\n    } else {\n      this.isAuthorized.next(false);\n      return undefined;\n    }\n  }\n\n  logout() {\n    this.storageService.clear();\n    this.isAuthorized.next(false);\n    this.router.navigate([\"/auth/login\"]);\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { NavBarComponent } from \"./components/nav-bar/nav-bar.component\";\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\nimport { RouterModule } from \"@angular/router\";\nimport { StorageService } from \"./services/storage.service\";\nimport { UserService } from \"./services/user.service\";\nimport { AuthInterceptor } from \"./services/auth.interceptor\";\nimport { HttpClientModule, HTTP_INTERCEPTORS } from \"@angular/common/http\";\nimport { UserApiService } from \"./services/user-api.service\";\n@NgModule({\n  imports: [CommonModule, NgbModule, RouterModule, HttpClientModule],\n  declarations: [NavBarComponent],\n  exports: [NavBarComponent],\n  providers: [\n    StorageService,\n    UserService,\n    UserApiService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true,\n    },\n  ],\n})\nexport class SharedModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  apiurl: \"http://188.227.84.35:3000\",\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}