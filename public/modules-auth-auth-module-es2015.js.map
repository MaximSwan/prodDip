{"version":3,"sources":["./src/app/modules/auth/auth-routing.module.ts","./src/app/modules/auth/auth.module.ts","./src/app/modules/auth/components/login/login.component.ts","./src/app/modules/auth/components/login/login.component.html","./src/app/modules/auth/components/registration/registration.component.ts","./src/app/modules/auth/components/registration/registration.component.html","./src/app/modules/auth/services/auth-api.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACkC;AACrB;;;AAEpE,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,cAAc;QACpB,SAAS,EAAE,qGAAqB;QAChC,IAAI,EAAE,EAAE,KAAK,EAAE,aAAa,EAAE;KAC/B;IACD;QACE,IAAI,EAAE,OAAO;QACb,SAAS,EAAE,gFAAc;QACzB,IAAI,EAAE,EAAE,KAAK,EAAE,aAAa,EAAE;KAC/B;CACF,CAAC;AAMK,MAAM,iBAAiB;;gGAAjB,iBAAiB;4JAAjB,iBAAiB,kBAHnB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAC9B,4DAAY;mIAEX,iBAAiB,uFAFlB,4DAAY;6FAEX,iBAAiB;cAJ7B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACrBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACW;AACF;AACH;AACe;AACqB;AAC5B;;AAYtD,MAAM,UAAU;;yFAAV,UAAU;8IAAV,UAAU,mBAFV,CAAC,yEAAc,CAAC,YAPlB;YACP,4DAAY;YACZ,sEAAiB;YACjB,qEAAgB;YAChB,kEAAmB;SACpB;mIAIU,UAAU,mBAHN,gFAAc,EAAE,qGAAqB,aALlD,4DAAY;QACZ,sEAAiB;QACjB,qEAAgB;QAChB,kEAAmB;6FAKV,UAAU;cAVtB,sDAAQ;eAAC;gBACR,OAAO,EAAE;oBACP,4DAAY;oBACZ,sEAAiB;oBACjB,qEAAgB;oBAChB,kEAAmB;iBACpB;gBACD,YAAY,EAAE,CAAC,gFAAc,EAAE,qGAAqB,CAAC;gBACrD,SAAS,EAAE,CAAC,yEAAc,CAAC;aAC5B;;;;;;;;;;;;;;AClBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACkB;;;;;;;;ICyBhE,0EACE;IAAA,uDACF;IAAA,4DAAO;;;IADL,0DACF;IADE,6FACF;;ADjBG,MAAM,cAAc;IAUzB,YACU,MAAsB,EACtB,IAAoB,EACpB,OAAe,EACf,YAAyB;QAHzB,WAAM,GAAN,MAAM,CAAgB;QACtB,SAAI,GAAJ,IAAI,CAAgB;QACpB,YAAO,GAAP,OAAO,CAAQ;QACf,iBAAY,GAAZ,YAAY,CAAa;QAbnC,cAAS,GAAG,IAAI,wDAAS,CAAC;YACxB,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;YACnE,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SACrD,CAAC,CAAC;QAEH,aAAQ,GAAG,EAAE,CAAC;QAEd,eAAU,GAAG,EAAE,CAAC;IAOb,CAAC;IAEJ,QAAQ;QACN,IAAI,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,EAAE;YACnC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;SACvC;QACD,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACjD,IAAI,MAAM,KAAK,GAAG,EAAE;YAClB,IAAI,CAAC,UAAU,GAAG,mDAAmD,CAAC;SACvE;IACH,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,IAAI;aACN,SAAS,CAAC;YACT,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK;YACjC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ;SACxC,CAAC;aACD,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YACjB,IAAK,GAAwD,CAAC,KAAK,EAAE;gBACnE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAC7B,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;aAC9C;YACD,IAAK,GAAkC,CAAC,KAAK,CAAC,GAAG,EAAE;gBACjD,IAAI,CAAC,QAAQ,GAAI,GAAkC,CAAC,KAAK,CAAC,GAAG,CAAC;aAC/D;QACH,CAAC,CAAC,CAAC;IACP,CAAC;;4EA1CU,cAAc;8FAAd,cAAc;QCX3B,yEACE;QAAA,0EACE;QADyC,0IAAY,cAAU,IAAC;QAChE,0EAGG;QAAA,mFAAI;QAAA,4DACN;QACD,sEAMA;QAAA,sEAMA;QAAA,4EAKE;QAAA,2FACF;QAAA,4DAAS;QACT,4GACE;QAEF,0EAA+C;QAAA,wDAAgB;QAAA,4DAAO;QACxE,4DAAO;QACT,4DAAM;;QA9Be,0DAAuB;QAAvB,oFAAuB;QAmBtC,0DAA6B;QAA7B,0FAA6B;QAMc,0DAAgB;QAAhB,8EAAgB;QAGd,0DAAgB;QAAhB,+EAAgB;;6FDlBtD,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACkB;;;;;;;;IC0BhE,0EACE;IAAA,uDACF;IAAA,4DAAO;;;IADL,0DACF;IADE,6FACF;;ADlBG,MAAM,qBAAqB;IAQhC,YACU,IAAoB,EACpB,OAAe,EACf,YAAyB;QAFzB,SAAI,GAAJ,IAAI,CAAgB;QACpB,YAAO,GAAP,OAAO,CAAQ;QACf,iBAAY,GAAZ,YAAY,CAAa;QAVnC,iBAAY,GAAG,IAAI,wDAAS,CAAC;YAC3B,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;YACnE,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SACrD,CAAC,CAAC;QAEH,aAAQ,GAAG,EAAE,CAAC;IAMX,CAAC;IAEJ,QAAQ;QACN,IAAI,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,EAAE;YACnC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;SACxC;IACH,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,IAAI;aACN,OAAO,CAAC;YACP,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK;YACpC,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,QAAQ;SAC3C,CAAC;aACD,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YACjB,IAAK,GAAsB,CAAC,EAAE,EAAE;gBAC9B,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,aAAa,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;aAC1D;YACD,IAAK,GAAkC,CAAC,KAAK,CAAC,GAAG,EAAE;gBACjD,IAAI,CAAC,QAAQ,GAAI,GAAkC,CAAC,KAAK,CAAC,GAAG,CAAC;aAC/D;QACH,CAAC,CAAC,CAAC;IACP,CAAC;;0FAlCU,qBAAqB;qGAArB,qBAAqB;QCXlC,yEACE;QAAA,0EACE;QAD4C,iJAAY,cAAU,IAAC;QACnE,0EAGG;QAAA,6HAAW;QAAA,4DACb;QACD,sEAMA;QAAA,sEAOA;QAAA,4EAKE;QAAA,yKACF;QAAA,4DAAS;QACT,mHACE;QAEJ,4DAAO;QACT,4DAAM;;QA9Be,0DAA0B;QAA1B,uFAA0B;QAoBzC,0DAAgC;QAAhC,6FAAgC;QAMW,0DAAgB;QAAhB,8EAAgB;;6FDhBpD,qBAAqB;cALjC,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAA2C;AAEgB;;;AAIpD,MAAM,cAAc;IACzB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAEnB,aAAQ,GAAG,wEAAW,CAAC,MAAM,CAAC;IAFR,CAAC;IAIxC,OAAO,CAAC,IAAU;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CACnB,GAAG,IAAI,CAAC,QAAQ,wBAAwB,EACxC,IAAI,CACL,CAAC;IACJ,CAAC;IAED,SAAS,CACP,IAAY;QAKZ,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAGnB,GAAG,IAAI,CAAC,QAAQ,iBAAiB,EAAE,IAAI,CAAC,CAAC;IAC7C,CAAC;;4EAtBU,cAAc;iGAAd,cAAc,WAAd,cAAc;6FAAd,cAAc;cAD1B,wDAAU","file":"modules-auth-auth-module-es2015.js","sourcesContent":["import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { RegistrationComponent } from \"./components/registration/registration.component\";\r\nimport { LoginComponent } from \"./components/login/login.component\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"registration\",\r\n    component: RegistrationComponent,\r\n    data: { title: \"Регистрация\" },\r\n  },\r\n  {\r\n    path: \"login\",\r\n    component: LoginComponent,\r\n    data: { title: \"Авторизация\" },\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AuthRoutingModule {}\r\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { AuthRoutingModule } from \"./auth-routing.module\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { LoginComponent } from \"./components/login/login.component\";\nimport { RegistrationComponent } from \"./components/registration/registration.component\";\nimport { AuthApiService } from \"./services/auth-api.service\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n  ],\n  declarations: [LoginComponent, RegistrationComponent],\n  providers: [AuthApiService],\n})\nexport class AuthModule {}","import { Component, OnInit } from \"@angular/core\";\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { UserService } from \"src/app/shared/services/user.service\";\nimport { AuthApiService } from \"../../services/auth-api.service\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.scss\"],\n})\nexport class LoginComponent implements OnInit {\n  loginForm = new FormGroup({\n    email: new FormControl(\"\", [Validators.required, Validators.email]),\n    password: new FormControl(\"\", [Validators.required]),\n  });\n\n  errorMsg = \"\";\n\n  successMsg = \"\";\n\n  constructor(\n    private _route: ActivatedRoute,\n    private _api: AuthApiService,\n    private _router: Router,\n    private _userService: UserService\n  ) {}\n\n  ngOnInit() {\n    if (this._userService.hasAuthData()) {\n      this._router.navigate([\"/main/page\"]);\n    }\n    const signup = this._route.snapshot.params[\"ok\"];\n    if (signup === \"1\") {\n      this.successMsg = \"Вы успешно зарегестрировались. Войдите в систему.\";\n    }\n  }\n\n  onSubmit() {\n    this._api\n      .sendLogin({\n        email: this.loginForm.value.email,\n        password: this.loginForm.value.password,\n      })\n      .subscribe((res) => {\n        if ((res as { token: string; userId: string; email: string }).token) {\n          this._userService.login(res);\n          return this._router.navigate([\"/main/page\"]);\n        }\n        if ((res as { error: { msg: string } }).error.msg) {\n          this.errorMsg = (res as { error: { msg: string } }).error.msg;\n        }\n      });\n  }\n}\n","<div class=\"main-block\">\n  <form class=\"info\" [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n    <span\n      class=\"info__header\"\n      style=\"margin-bottom: 20px; font-size: 22px; font-weight: 600\"\n      >Вход</span\n    >\n    <input\n      formControlName=\"email\"\n      type=\"text\"\n      placeholder=\"email\"\n      class=\"form-control\"\n    />\n    <input\n      formControlName=\"password\"\n      type=\"password\"\n      placeholder=\"password\"\n      class=\"form-control\"\n    />\n    <button\n      [disabled]=\"!loginForm.valid\"\n      type=\"submit\"\n      class=\"btn btn-outline-primary\"\n    >\n      Войти\n    </button>\n    <span style=\"margin-top: 20px\" class=\"error\" *ngIf=\"errorMsg\">\n      {{ errorMsg }}\n    </span>\n    <span style=\"margin-top: 20px\" class=\"success\">{{ successMsg }}</span>\n  </form>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport { UserService } from \"src/app/shared/services/user.service\";\nimport { AuthApiService } from \"../../services/auth-api.service\";\n\n@Component({\n  selector: \"app-registration\",\n  templateUrl: \"./registration.component.html\",\n  styleUrls: [\"./registration.component.scss\"],\n})\nexport class RegistrationComponent implements OnInit {\n  registerForm = new FormGroup({\n    email: new FormControl(\"\", [Validators.required, Validators.email]),\n    password: new FormControl(\"\", [Validators.required]),\n  });\n\n  errorMsg = \"\";\n\n  constructor(\n    private _api: AuthApiService,\n    private _router: Router,\n    private _userService: UserService\n  ) {}\n\n  ngOnInit() {\n    if (this._userService.hasAuthData()) {\n      this._router.navigate([\"/main/page/\"]);\n    }\n  }\n\n  onSubmit() {\n    this._api\n      .sendReg({\n        email: this.registerForm.value.email,\n        password: this.registerForm.value.password,\n      })\n      .subscribe((res) => {\n        if ((res as { ok: number }).ok) {\n          return this._router.navigate([\"/auth/login\", { ok: 1 }]);\n        }\n        if ((res as { error: { msg: string } }).error.msg) {\n          this.errorMsg = (res as { error: { msg: string } }).error.msg;\n        }\n      });\n  }\n}\n","<div class=\"main-block\">\n  <form class=\"info\" [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\n    <span\n      style=\"margin-bottom: 20px; font-size: 22px; font-weight: 600\"\n      class=\"info__header\"\n      >Регистрация</span\n    >\n    <input\n      formControlName=\"email\"\n      type=\"text\"\n      placeholder=\"email\"\n      class=\"form-control\"\n    />\n    <input\n      formControlName=\"password\"\n      type=\"password\"\n      placeholder=\"password\"\n      class=\"form-control\"\n      style=\"margin-bottom: 20px\"\n    />\n    <button\n      [disabled]=\"!registerForm.valid\"\n      type=\"submit\"\n      class=\"btn btn-outline-primary\"\n    >\n      Зарегестрироваться\n    </button>\n    <span style=\"margin-top: 20px\" class=\"error\" *ngIf=\"errorMsg\">\n      {{ errorMsg }}\n    </span>\n  </form>\n</div>\n","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { environment } from \"src/environments/environment\";\nimport { ILogin, IReg } from \"../interfaces/auth\";\n\n@Injectable()\nexport class AuthApiService {\n  constructor(private http: HttpClient) {}\n\n  private readonly BASE_URL = environment.apiurl;\n\n  sendReg(body: IReg): Observable<{ ok: 1 } | { error: { msg: string } }> {\n    return this.http.post<{ ok: 1 } | { error: { msg: string } }>(\n      `${this.BASE_URL}/api/auth/registration`,\n      body\n    );\n  }\n\n  sendLogin(\n    body: ILogin\n  ): Observable<\n    | { token: string; userId: string; email: string }\n    | { error: { msg: string } }\n  > {\n    return this.http.post<\n      | { token: string; userId: string; email: string }\n      | { error: { msg: string } }\n    >(`${this.BASE_URL}/api/auth/login`, body);\n  }\n}\n"],"sourceRoot":"webpack:///"}